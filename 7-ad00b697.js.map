{"version":3,"sources":["webpack:///./src/App.jsx"],"names":["data","Array","fill","map","name","isSelected","forEach","item","ds","state","isActive","setAllSelection","flag","toggleActive","setState","setActive","componentDidMount","this","isAllowOverSelection","onSelected","mergeData","index","console","log","render","className","filter","length","type","onClick","key","href","target","title","componentWillUnmount","destroy"],"mappings":"ooBAKMA,EAAOC,MAAM,IAAIC,KAAK,MAAMC,KAAI,WAAM,OAC1CC,KAAM,OACNC,YAAY,MAEd,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIC,SAAQ,SAAAC,GACzCP,EAAKO,GAAMH,KAAO,0BAClBJ,EAAKO,GAAMF,YAAa,KAmB1B,6E,OACE,EAAAG,GAAK,KACL,EAAAC,MAAQ,CACNT,KAAI,EACJU,UAAU,GAGZ,EAAAC,gBAAkB,SAACC,GAAS,kBACtB,EAAKJ,IACP,EAAKA,GAAGG,gBAAgBC,KAI5B,EAAAC,aAAe,WACb,SAAKC,SACH,CAAEJ,UAAW,EAAKD,MAAMC,WACxB,WAAM,SAAKF,GAAGO,UAAU,EAAKN,MAAMC,c,EAkEzC,OAlF6B,OAmB3B,YAAAM,kBAAA,sBACEC,KAAKT,GAAK,IAAI,eAAa,iBAAkB,CAC3CR,KAAMiB,KAAKR,MAAMT,KAAKG,KAAI,SAAAI,GAAQ,OAAAA,EAAKF,cACvCa,sBAAsB,EACtBC,WAAY,SAACnB,GACX,IAAMoB,EAAY,EAAKX,MAAMT,KAAKG,KAAI,SAACI,EAAMc,GAAU,cAClDd,GAAI,CACPF,WAAYL,EAAKqB,QAEnB,EAAKP,SAAS,CAAEd,KAAMoB,IAAa,WAAM,OAAAE,QAAQC,IAAI,EAAKd,MAAMT,aAKtE,YAAAwB,OAAA,WACE,OACE,uBAAKC,UAAU,eACb,2BACE,yB,IAAKR,KAAKR,MAAMT,KAAK0B,QAAO,SAAAnB,GAAQ,OAAAA,EAAKF,cAAYsB,O,oBACrD,0BAAQC,KAAK,SAASC,QAASZ,KAAKN,iBAAgB,IAAK,WACzD,0BAAQiB,KAAK,SAASC,QAASZ,KAAKN,iBAAgB,IAAM,WAC1D,0BAAQiB,KAAK,SAASC,QAASZ,KAAKJ,cAAY,iBAChD,4BAAUI,KAAKR,MAAMC,SAAW,WAAa,eAG/C,+BACE,uBAAKe,UAAU,iBACZR,KAAKR,MAAMT,KAAKG,KAAI,SAACI,EAAMc,GAC1B,8BACES,IAAKT,EACLI,UAAU,qBAAoB,gBACflB,EAAKF,YAEpB,2B,SAAYgB,EAAQ,GACpB,uBAAKI,UAAW,aAAYlB,EAAKF,WAAa,MAAQ,KAAI,YAMlE,8BACE,wCACA,mDACA,yB,eAAe,0D,qBACf,2BACA,qBAAG0B,KAAK,oCAAoCC,OAAO,SAASC,MAAM,mBAAiB,mBAGnF,2BAAK,2BAAK,4BAGZ,kFAON,YAAAC,qBAAA,WACMjB,KAAKT,IACPS,KAAKT,GAAG2B,WAGd,EAlFA,CAA6B,a","file":"7-ad00b697.js","sourcesContent":["import * as React from 'react'\nimport { DragSelector } from '@mornya/drag-selector-libs'\nimport '@mornya/drag-selector-libs/dist/drag-selector.scss'\nimport './App.scss'\n\nconst data = Array(50).fill(null).map(() => ({\n  name: 'ITEM',\n  isSelected: false,\n}));\n[3, 6, 11, 24, 29, 32, 33, 40, 49].forEach(item => {\n  data[item].name = 'INITIALLY SELECTED ITEM'\n  data[item].isSelected = true\n})\n\n/**\n * This is an app of entries.\n *\n * React-Router v4 example:\n *\n * <div>\n *   <Route exact path=\"/\" component={Home}>\n *   <Route path=\"/about\" component={About}/>\n *   <Switch>\n *     <Redirect from=\"/me/project1\" to=\"/project/1\"/>\n *     <Redirect from=\"/me/project2\" to=\"/project/2\"/>\n *   </Switch>\n *   <Route exact path=\"/project\" component={Project} />\n *   <Route path=\"/project/:no\" component={Project} />\n * </div>\n */\nexport default class extends React.Component {\n  ds = null\n  state = {\n    data,\n    isActive: true,\n  }\n\n  setAllSelection = (flag) => () => {\n    if (this.ds) {\n      this.ds.setAllSelection(flag)\n    }\n  }\n\n  toggleActive = () =>\n    this.setState(\n      { isActive: !this.state.isActive },\n      () => this.ds.setActive(this.state.isActive)\n    )\n\n  componentDidMount () {\n    this.ds = new DragSelector('.drag-selector', {\n      data: this.state.data.map(item => item.isSelected),\n      isAllowOverSelection: false,\n      onSelected: (data) => {\n        const mergeData = this.state.data.map((item, index) => ({\n          ...item,\n          isSelected: data[index],\n        }))\n        this.setState({ data: mergeData }, () => console.log(this.state.data))\n      }\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"app-wrapper\">\n        <nav>\n          <p>({this.state.data.filter(item => item.isSelected).length} items selected)</p>\n          <button type=\"button\" onClick={this.setAllSelection(true)}>ADD ALL</button>\n          <button type=\"button\" onClick={this.setAllSelection(false)}>SUB ALL</button>\n          <button type=\"button\" onClick={this.toggleActive}>TOGGLE ACTIVE</button>\n          <span>{`${this.state.isActive ? ' Actived' : ' Deactived'}`}</span>\n        </nav>\n\n        <section>\n          <div className=\"drag-selector\">\n            {this.state.data.map((item, index) =>\n              <div\n                key={index}\n                className=\"drag-selector-item\"\n                data-selected={item.isSelected}\n              >\n                <div>Item #{index + 1}</div>\n                <div className={`item-flag${item.isSelected ? ' on' : ''}`}>❤️</div>\n              </div>\n            )}\n          </div>\n        </section>\n\n        <header>\n          <h1>React Demo</h1>\n          <h2>Drag Selector library</h2>\n          <p>This is NPM <code>@mornya/drag-selector-libs</code> sample demo app!</p>\n          <br/>\n          <a href=\"https://npmjs.com/search?q=mornya\" target=\"_blank\" title=\"Go NPM registry\">\n            Go NPM registry\n          </a>\n          <br/><br/><br/>\n        </header>\n\n        <footer>\n          Copyright 2019 by mornya. All rights reserved.\n        </footer>\n      </div>\n    )\n  }\n\n  componentWillUnmount () {\n    if (this.ds) {\n      this.ds.destroy()\n    }\n  }\n}\n"],"sourceRoot":""}